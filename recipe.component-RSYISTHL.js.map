{
  "version": 3,
  "sources": ["src/app/routes/main/routes/data/routes/recipe/recipe.component.ts", "src/app/routes/main/routes/data/routes/recipe/recipe.component.html"],
  "sourcesContent": ["import { ChangeDetectionStrategy, Component, computed } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\n\nimport { AppSharedModule } from '~/app-shared.module';\nimport { coalesce } from '~/helpers';\nimport { Game, Rational, Recipe, RecipeSettings } from '~/models';\nimport { Recipes } from '~/store';\nimport { DetailComponent } from '../../models';\n\n@Component({\n  standalone: true,\n  imports: [AppSharedModule],\n  templateUrl: './recipe.component.html',\n  styleUrls: ['./recipe.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RecipeComponent extends DetailComponent {\n  recipesStateRaw = this.store.selectSignal(Recipes.recipesState);\n  recipesState = this.store.selectSignal(Recipes.getRecipesState);\n\n  obj = computed<Recipe | undefined>(\n    () => this.data().recipeEntities[this.id()],\n  );\n  breadcrumb = computed<MenuItem[]>(() => [\n    this.parent(),\n    { label: this.obj()?.name },\n  ]);\n  info = computed(() => {\n    const id = this.id();\n    const data = this.data();\n    const recipe = data.recipeEntities[id];\n    return {\n      category: data.categoryEntities[coalesce(recipe?.category, '')],\n      ingredientIds: Object.keys(recipe?.in ?? {}),\n      catalystIds: Object.keys(recipe?.catalyst ?? {}),\n      productIds: Object.keys(recipe?.out ?? {}),\n    };\n  });\n  recipeSettings = computed<RecipeSettings | undefined>(\n    () => this.recipesState()[this.id()],\n  );\n  recipeR = computed<Recipe | undefined>(\n    () => this.data().adjustedRecipe[this.id()],\n  );\n\n  Game = Game;\n\n  toggleRecipe(): void {\n    const recipeSettings = this.recipeSettings();\n    if (recipeSettings == null) return;\n\n    const id = this.id();\n    const value = !recipeSettings.excluded;\n    const def = coalesce(this.data().defaults?.excludedRecipeIds, []).some(\n      (i) => i === id,\n    );\n    this.setRecipeExcluded(id, value, def);\n  }\n\n  /** Action dispatch methods */\n  setRecipeExcluded(id: string, value: boolean, def: boolean): void {\n    this.store.dispatch(new Recipes.SetExcludedAction({ id, value, def }));\n  }\n\n  setRecipeChecked(id: string, value: boolean): void {\n    this.store.dispatch(new Recipes.SetCheckedAction({ id, value }));\n  }\n\n  setRecipeCost(id: string, value: Rational): void {\n    this.store.dispatch(new Recipes.SetCostAction({ id, value }));\n  }\n\n  resetRecipe(value: string): void {\n    this.store.dispatch(new Recipes.ResetRecipeAction(value));\n  }\n}\n", "<p-breadcrumb [home]=\"home()\" [model]=\"breadcrumb()\"></p-breadcrumb>\n@if (obj(); as obj) {\n  <table class=\"properties mb-4\">\n    <tr>\n      <th colspan=\"2\" class=\"text-center\">\n        <h3>{{ obj.name }}</h3>\n      </th>\n    </tr>\n    <tr>\n      <td colspan=\"2\" class=\"text-center\">\n        <i class=\"lg\" [class]=\"id() | iconClass: 'recipe'\"></i>\n      </td>\n    </tr>\n    @if (info().category; as category) {\n      <tr>\n        <th>{{ 'data.category' | translate }}</th>\n        <td>\n          <a\n            [routerLink]=\"'/data/categories/' + obj.category\"\n            queryParamsHandling=\"preserve\"\n          >\n            <button\n              pButton\n              pRipple\n              type=\"button\"\n              class=\"p-button-text\"\n              [label]=\"category.name\"\n              [icon]=\"obj.category | iconSmClass: 'category'\"\n            ></button>\n          </a>\n        </td>\n      </tr>\n    }\n    <tr>\n      <th>{{ 'data.time' | translate }}</th>\n      <td>{{ obj.time }}</td>\n    </tr>\n    @if (info().ingredientIds.length) {\n      <tr>\n        <th>{{ 'data.ingredients' | translate }}</th>\n        <td>\n          @for (i of info().ingredientIds; track i) {\n            <div>\n              <a\n                [routerLink]=\"'/data/items/' + i\"\n                queryParamsHandling=\"preserve\"\n              >\n                <button\n                  pButton\n                  pRipple\n                  type=\"button\"\n                  class=\"p-button-text\"\n                  [label]=\"data().itemEntities[i].name\"\n                  [icon]=\"i | iconSmClass\"\n                ></button>\n              </a>\n              <span class=\"ms-3\">{{ obj.in[i] }}</span>\n            </div>\n          }\n        </td>\n      </tr>\n    }\n    @if (info().catalystIds.length) {\n      <tr>\n        <th>{{ 'data.catalysts' | translate }}</th>\n        <td>\n          @for (i of info().catalystIds; track i) {\n            <div>\n              <a\n                [routerLink]=\"'/data/items/' + i\"\n                queryParamsHandling=\"preserve\"\n              >\n                <button\n                  pButton\n                  pRipple\n                  type=\"button\"\n                  class=\"p-button-text\"\n                  [label]=\"data().itemEntities[i].name\"\n                  [icon]=\"i | iconSmClass\"\n                ></button>\n              </a>\n              <span class=\"ms-3\">{{ obj.catalyst?.[i] }}</span>\n            </div>\n          }\n        </td>\n      </tr>\n    }\n    @if (info().productIds.length) {\n      <tr>\n        <th>{{ 'data.products' | translate }}</th>\n        <td>\n          @for (i of info().productIds; track i) {\n            <div>\n              <a\n                [routerLink]=\"'/data/items/' + i\"\n                queryParamsHandling=\"preserve\"\n              >\n                <button\n                  pButton\n                  pRipple\n                  type=\"button\"\n                  class=\"p-button-text\"\n                  [label]=\"data().itemEntities[i].name\"\n                  [icon]=\"i | iconSmClass\"\n                ></button>\n              </a>\n              <span class=\"ms-3\">{{ obj.out[i] | round }}</span>\n            </div>\n          }\n        </td>\n      </tr>\n    }\n    <tr>\n      <th>{{ 'data.producers' | translate }}</th>\n      <td>\n        @for (i of obj.producers; track i) {\n          <div>\n            <a\n              [routerLink]=\"'/data/machines/' + i\"\n              queryParamsHandling=\"preserve\"\n            >\n              <button\n                pButton\n                pRipple\n                type=\"button\"\n                class=\"p-button-text\"\n                [label]=\"data().itemEntities[i].name\"\n                [icon]=\"i | iconSmClass\"\n              ></button>\n            </a>\n          </div>\n        }\n      </td>\n    </tr>\n    @if (obj.unlockedBy) {\n      <tr>\n        <th>{{ 'data.unlockedBy' | translate }}</th>\n        <td>\n          <a\n            [routerLink]=\"'/data/technologies/' + obj.unlockedBy\"\n            queryParamsHandling=\"preserve\"\n          >\n            <button\n              pButton\n              pRipple\n              type=\"button\"\n              class=\"p-button-text\"\n              [label]=\"data().itemEntities[obj.unlockedBy].name\"\n              [icon]=\"obj.unlockedBy | iconSmClass: 'recipe'\"\n            ></button>\n          </a>\n        </td>\n      </tr>\n    }\n    @if (obj.isMining) {\n      <tr>\n        <th>{{ 'data.mining' | translate }}</th>\n        <td>\n          <p-checkbox\n            [ngModel]=\"true\"\n            [binary]=\"true\"\n            [disabled]=\"true\"\n          ></p-checkbox>\n        </td>\n      </tr>\n    }\n    @if (obj.isTechnology) {\n      <tr>\n        <th>{{ 'data.technology' | translate }}</th>\n        <td>\n          <p-checkbox\n            [ngModel]=\"true\"\n            [binary]=\"true\"\n            [disabled]=\"true\"\n          ></p-checkbox>\n        </td>\n      </tr>\n    }\n    @if (obj.part) {\n      <tr>\n        <th>{{ 'data.rocketPart' | translate }}</th>\n        <td>\n          <a\n            [routerLink]=\"'/data/items/' + obj.part\"\n            queryParamsHandling=\"preserve\"\n          >\n            <button\n              pButton\n              pRipple\n              type=\"button\"\n              class=\"p-button-text\"\n              [label]=\"data().itemEntities[obj.part].name\"\n              [icon]=\"obj.part | iconSmClass\"\n            ></button>\n          </a>\n        </td>\n      </tr>\n    }\n    @if (obj.usage) {\n      <tr>\n        <th>{{ 'data.energyConsumption' | translate }}</th>\n        <td>{{ obj.usage | usage }}</td>\n      </tr>\n    }\n    <tr>\n      <th colspan=\"2\">\n        <div class=\"d-flex align-items-center justify-content-between\">\n          <button\n            pButton\n            pRipple\n            type=\"button\"\n            class=\"invisible p-button-rounded\"\n            icon=\"fa-solid fa-rotate-right\"\n          ></button>\n          <h3>{{ 'data.recipeSettings' | translate }}</h3>\n          <button\n            [class.invisible]=\"!recipesStateRaw()[id()]\"\n            pButton\n            pRipple\n            type=\"button\"\n            class=\"p-button-rounded\"\n            icon=\"fa-solid fa-rotate-left\"\n            (click)=\"resetRecipe(id())\"\n          ></button>\n        </div>\n      </th>\n    </tr>\n    @if (recipeSettings(); as recipeSettings) {\n      <tr>\n        <th>{{ 'data.excluded' | translate }}</th>\n        <td>\n          <p-checkbox\n            [ngModel]=\"recipeSettings.excluded\"\n            [binary]=\"true\"\n            (onChange)=\"toggleRecipe()\"\n          ></p-checkbox>\n        </td>\n      </tr>\n      <tr>\n        <th>{{ 'data.checked' | translate }}</th>\n        <td>\n          <p-checkbox\n            [ngModel]=\"recipeSettings.checked\"\n            [binary]=\"true\"\n            (onChange)=\"setRecipeChecked(id(), $event.checked)\"\n          ></p-checkbox>\n        </td>\n      </tr>\n      <tr>\n        <th>{{ 'data.machine' | translate }}</th>\n        <td>\n          @if (recipeSettings.machineId; as id) {\n            <a\n              [routerLink]=\"'/data/machines/' + id\"\n              queryParamsHandling=\"preserve\"\n            >\n              <button\n                pButton\n                pRipple\n                type=\"button\"\n                class=\"p-button-text\"\n                [label]=\"data().itemEntities[id].name\"\n                [icon]=\"id | iconSmClass\"\n              ></button>\n            </a>\n          }\n        </td>\n      </tr>\n      @if (recipeSettings.modules?.length) {\n        <tr>\n          <th>{{ 'data.modules' | translate }}</th>\n          <td>\n            @for (module of recipeSettings.modules; track module.id) {\n              @if (module.id; as moduleId) {\n                <div>\n                  @if (moduleId === 'module') {\n                    <i [class]=\"moduleId | iconSmClass\"></i>\n                  } @else {\n                    <a\n                      [routerLink]=\"'/data/modules/' + moduleId\"\n                      queryParamsHandling=\"preserve\"\n                    >\n                      <button\n                        pButton\n                        pRipple\n                        type=\"button\"\n                        class=\"p-button-text\"\n                        [label]=\"data().itemEntities[moduleId].name\"\n                        [icon]=\"moduleId | iconSmClass\"\n                      ></button>\n                    </a>\n                  }\n                </div>\n              }\n            }\n          </td>\n        </tr>\n      }\n      @if (data().game === Game.Factorio) {\n        <tr>\n          <th>{{ 'data.beacons' | translate }}</th>\n          <td>\n            @for (beacon of recipeSettings.beacons; track $index) {\n              <div>\n                @if (beacon.id) {\n                  <a\n                    [routerLink]=\"'/data/beacons/' + beacon.id\"\n                    queryParamsHandling=\"preserve\"\n                  >\n                    <button\n                      pButton\n                      pRipple\n                      type=\"button\"\n                      class=\"p-button-text\"\n                      [label]=\"data().itemEntities[beacon.id].name\"\n                      [icon]=\"beacon.id | iconSmClass\"\n                    ></button>\n                  </a>\n                }\n                <span class=\"ms-3\">{{ beacon.count }}</span>\n              </div>\n              @for (module of beacon.modules; track module.id) {\n                @if (module.id; as moduleId) {\n                  <div>\n                    @if (moduleId === 'module') {\n                      <i [class]=\"moduleId | iconSmClass\"> </i>\n                    } @else {\n                      <a\n                        [routerLink]=\"'/data/modules/' + moduleId\"\n                        queryParamsHandling=\"preserve\"\n                      >\n                        <button\n                          pButton\n                          pRipple\n                          type=\"button\"\n                          class=\"p-button-text\"\n                          [label]=\"data().itemEntities[moduleId].name\"\n                          [icon]=\"moduleId | iconSmClass\"\n                        ></button>\n                      </a>\n                    }\n                  </div>\n                }\n              }\n            }\n          </td>\n        </tr>\n      }\n      @if (data().game === Game.Satisfactory) {\n        <tr>\n          <th>{{ 'data.overclock' | translate }}</th>\n          <td>{{ recipeSettings.overclock }}%</td>\n          <td></td>\n        </tr>\n      }\n    }\n    @if (recipeR()?.cost; as cost) {\n      <tr>\n        <th>{{ 'data.cost' | translate }}</th>\n        <td>\n          <lab-input-number\n            [value]=\"cost\"\n            (setValue)=\"setRecipeCost(id(), $event)\"\n          ></lab-input-number>\n        </td>\n      </tr>\n    }\n  </table>\n} @else {\n  <div class=\"my-5 p-error\">{{ 'data.notFound' | translate }}</div>\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcM,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;;AAAiC,IAAA,uBAAA;AACrC,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,KAAA,CAAA;AAKA,IAAA,oBAAA,GAAA,UAAA,EAAA;;AAQF,IAAA,uBAAA,EAAI,EACD;;;;AAfD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,eAAA,CAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,cAAA,sBAAA,OAAA,QAAA;AAQE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,IAAA,IAAA,EAAuB,QAAA,sBAAA,GAAA,GAAA,OAAA,UAAA,UAAA,CAAA;;;;;AAgBzB,IAAA,yBAAA,GAAA,KAAA,EAAK,GAAA,KAAA,CAAA;AAKD,IAAA,oBAAA,GAAA,UAAA,EAAA;;AAQF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAmB,IAAA,iBAAA,CAAA;AAAe,IAAA,uBAAA,EAAO;;;;;;AAZvC,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,iBAAA,IAAA;AAQE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,KAAA,EAAA,aAAA,IAAA,EAAA,IAAA,EAAqC,QAAA,sBAAA,GAAA,GAAA,IAAA,CAAA;AAItB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,GAAA,IAAA,CAAA;;;;;AAlB3B,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;;AAAoC,IAAA,uBAAA;AACxC,IAAA,yBAAA,GAAA,IAAA;AACE,IAAA,2BAAA,GAAA,6DAAA,GAAA,GAAA,OAAA,MAAA,mCAAA;AAkBF,IAAA,uBAAA,EAAK;;;;AApBD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,kBAAA,CAAA;AAEF,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,KAAA,EAAM,aAAA;;;;;AA0BJ,IAAA,yBAAA,GAAA,KAAA,EAAK,GAAA,KAAA,CAAA;AAKD,IAAA,oBAAA,GAAA,UAAA,EAAA;;AAQF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAmB,IAAA,iBAAA,CAAA;AAAuB,IAAA,uBAAA,EAAO;;;;;;AAZ/C,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,iBAAA,IAAA;AAQE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,KAAA,EAAA,aAAA,IAAA,EAAA,IAAA,EAAqC,QAAA,sBAAA,GAAA,GAAA,IAAA,CAAA;AAItB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,YAAA,OAAA,OAAA,OAAA,SAAA,IAAA,CAAA;;;;;AAlB3B,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;;AAAkC,IAAA,uBAAA;AACtC,IAAA,yBAAA,GAAA,IAAA;AACE,IAAA,2BAAA,GAAA,6DAAA,GAAA,GAAA,OAAA,MAAA,mCAAA;AAkBF,IAAA,uBAAA,EAAK;;;;AApBD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,gBAAA,CAAA;AAEF,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,KAAA,EAAM,WAAA;;;;;AA0BJ,IAAA,yBAAA,GAAA,KAAA,EAAK,GAAA,KAAA,CAAA;AAKD,IAAA,oBAAA,GAAA,UAAA,EAAA;;AAQF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAmB,IAAA,iBAAA,CAAA;;AAAwB,IAAA,uBAAA,EAAO;;;;;;AAZhD,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,iBAAA,IAAA;AAQE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,KAAA,EAAA,aAAA,IAAA,EAAA,IAAA,EAAqC,QAAA,sBAAA,GAAA,GAAA,IAAA,CAAA;AAItB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,OAAA,IAAA,IAAA,CAAA,CAAA;;;;;AAlB3B,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;;AAAiC,IAAA,uBAAA;AACrC,IAAA,yBAAA,GAAA,IAAA;AACE,IAAA,2BAAA,GAAA,6DAAA,GAAA,GAAA,OAAA,MAAA,mCAAA;AAkBF,IAAA,uBAAA,EAAK;;;;AApBD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,eAAA,CAAA;AAEF,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,KAAA,EAAM,UAAA;;;;;AAyBN,IAAA,yBAAA,GAAA,KAAA,EAAK,GAAA,KAAA,CAAA;AAKD,IAAA,oBAAA,GAAA,UAAA,EAAA;;AAQF,IAAA,uBAAA,EAAI;;;;;AAXF,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,oBAAA,IAAA;AAQE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,KAAA,EAAA,aAAA,IAAA,EAAA,IAAA,EAAqC,QAAA,sBAAA,GAAA,GAAA,IAAA,CAAA;;;;;AAS/C,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;;AAAmC,IAAA,uBAAA;AACvC,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,KAAA,CAAA;AAKA,IAAA,oBAAA,GAAA,UAAA,EAAA;;AAQF,IAAA,uBAAA,EAAI,EACD;;;;;AAfD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,iBAAA,CAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,cAAA,wBAAA,OAAA,UAAA;AAQE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,KAAA,EAAA,aAAA,OAAA,UAAA,EAAA,IAAA,EAAkD,QAAA,sBAAA,GAAA,GAAA,OAAA,YAAA,QAAA,CAAA;;;;;AAQ1D,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;;AAA+B,IAAA,uBAAA;AACnC,IAAA,yBAAA,GAAA,IAAA;AACE,IAAA,oBAAA,GAAA,cAAA,EAAA;AAKF,IAAA,uBAAA,EAAK;;;AAPD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,aAAA,CAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,IAAA,EAAgB,UAAA,IAAA,EACD,YAAA,IAAA;;;;;AAOrB,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;;AAAmC,IAAA,uBAAA;AACvC,IAAA,yBAAA,GAAA,IAAA;AACE,IAAA,oBAAA,GAAA,cAAA,EAAA;AAKF,IAAA,uBAAA,EAAK;;;AAPD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,iBAAA,CAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,IAAA,EAAgB,UAAA,IAAA,EACD,YAAA,IAAA;;;;;AAOrB,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;;AAAmC,IAAA,uBAAA;AACvC,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,KAAA,CAAA;AAKA,IAAA,oBAAA,GAAA,UAAA,EAAA;;AAQF,IAAA,uBAAA,EAAI,EACD;;;;;AAfD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,iBAAA,CAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,cAAA,iBAAA,OAAA,IAAA;AAQE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,KAAA,EAAA,aAAA,OAAA,IAAA,EAAA,IAAA,EAA4C,QAAA,sBAAA,GAAA,GAAA,OAAA,IAAA,CAAA;;;;;AAQpD,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;;AAA0C,IAAA,uBAAA;AAC9C,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,CAAA;;AAAuB,IAAA,uBAAA,EAAK;;;;AAD5B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,wBAAA,CAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,OAAA,KAAA,CAAA;;;;;AAmDA,IAAA,yBAAA,GAAA,KAAA,CAAA;AAIE,IAAA,oBAAA,GAAA,UAAA,EAAA;;AAQF,IAAA,uBAAA;;;;;AAXE,IAAA,qBAAA,cAAA,oBAAA,KAAA;AAQE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,KAAA,EAAA,aAAA,KAAA,EAAA,IAAA,EAAsC,QAAA,sBAAA,GAAA,GAAA,KAAA,CAAA;;;;;AAelC,IAAA,oBAAA,GAAA,GAAA;;;;;AAAG,IAAA,qBAAA,sBAAA,GAAA,GAAA,YAAA,CAAA;;;;;AAEH,IAAA,yBAAA,GAAA,KAAA,CAAA;AAIE,IAAA,oBAAA,GAAA,UAAA,EAAA;;AAQF,IAAA,uBAAA;;;;;AAXE,IAAA,qBAAA,cAAA,mBAAA,YAAA;AAQE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,KAAA,EAAA,aAAA,YAAA,EAAA,IAAA,EAA4C,QAAA,sBAAA,GAAA,GAAA,YAAA,CAAA;;;;;AAbpD,IAAA,yBAAA,GAAA,KAAA;AACE,IAAA,qBAAA,GAAA,wGAAA,GAAA,GAAA,KAAA,EAAA,EAA6B,GAAA,wGAAA,GAAA,GAAA,KAAA,CAAA;AAiB/B,IAAA,uBAAA;;;AAjBE,IAAA,oBAAA;AAAA,IAAA,wBAAA,QAAA,WAAA,IAAA,CAAA;;;;;AAFJ,IAAA,qBAAA,GAAA,0FAAA,GAAA,GAAA,KAAA;;;;;AAAA,IAAA,yBAAA,WAAA,WAAA,MAAA,IAAA,IAAA,QAAA;;;;;AAJN,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;;AAAgC,IAAA,uBAAA;AACpC,IAAA,yBAAA,GAAA,IAAA;AACE,IAAA,2BAAA,GAAA,4EAAA,GAAA,GAAA,MAAA,MAAA,UAAA;AAuBF,IAAA,uBAAA,EAAK;;;;AAzBD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,cAAA,CAAA;AAEF,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,mBAAA,OAAA;;;;;AAiCM,IAAA,yBAAA,GAAA,KAAA,CAAA;AAIE,IAAA,oBAAA,GAAA,UAAA,EAAA;;AAQF,IAAA,uBAAA;;;;;AAXE,IAAA,qBAAA,cAAA,mBAAA,WAAA,EAAA;AAQE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,KAAA,EAAA,aAAA,WAAA,EAAA,EAAA,IAAA,EAA6C,QAAA,sBAAA,GAAA,GAAA,WAAA,EAAA,CAAA;;;;;AAW7C,IAAA,oBAAA,GAAA,GAAA;;;;;AAAG,IAAA,qBAAA,sBAAA,GAAA,GAAA,YAAA,CAAA;;;;;AAEH,IAAA,yBAAA,GAAA,KAAA,CAAA;AAIE,IAAA,oBAAA,GAAA,UAAA,EAAA;;AAQF,IAAA,uBAAA;;;;;AAXE,IAAA,qBAAA,cAAA,mBAAA,YAAA;AAQE,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,KAAA,EAAA,aAAA,YAAA,EAAA,IAAA,EAA4C,QAAA,sBAAA,GAAA,GAAA,YAAA,CAAA;;;;;AAbpD,IAAA,yBAAA,GAAA,KAAA;AACE,IAAA,qBAAA,GAAA,8GAAA,GAAA,GAAA,KAAA,EAAA,EAA6B,GAAA,8GAAA,GAAA,GAAA,KAAA,CAAA;AAiB/B,IAAA,uBAAA;;;AAjBE,IAAA,oBAAA;AAAA,IAAA,wBAAA,QAAA,WAAA,IAAA,CAAA;;;;;AAFJ,IAAA,qBAAA,GAAA,gGAAA,GAAA,GAAA,KAAA;;;;;AAAA,IAAA,yBAAA,WAAA,WAAA,MAAA,IAAA,IAAA,QAAA;;;;;AAnBF,IAAA,yBAAA,GAAA,KAAA;AACE,IAAA,qBAAA,GAAA,0FAAA,GAAA,GAAA,KAAA,CAAA;AAeA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAmB,IAAA,iBAAA,CAAA;AAAkB,IAAA,uBAAA,EAAO;AAE9C,IAAA,2BAAA,GAAA,kFAAA,GAAA,GAAA,MAAA,MAAA,UAAA;;;;AAjBE,IAAA,oBAAA;AAAA,IAAA,wBAAA,WAAA,KAAA,IAAA,EAAA;AAemB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,WAAA,KAAA;AAErB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA;;;;;AAtBN,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;;AAAgC,IAAA,uBAAA;AACpC,IAAA,yBAAA,GAAA,IAAA;AACE,IAAA,2BAAA,GAAA,4EAAA,GAAA,GAAA,MAAA,MAAA,gCAAA;AA2CF,IAAA,uBAAA,EAAK;;;;AA7CD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,cAAA,CAAA;AAEF,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,mBAAA,OAAA;;;;;AA+CJ,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;;AAAkC,IAAA,uBAAA;AACtC,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,CAAA;AAA+B,IAAA,uBAAA;AACnC,IAAA,oBAAA,GAAA,IAAA;AACF,IAAA,uBAAA;;;;AAHM,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,gBAAA,CAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,mBAAA,WAAA,GAAA;;;;;;AA3HR,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;;AAAiC,IAAA,uBAAA;AACrC,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,cAAA,EAAA;AAIA,IAAA,qBAAA,YAAA,SAAA,uFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,aAAA,CAAc;IAAA,CAAA;AAC3B,IAAA,uBAAA,EAAa,EACX;AAEP,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;;AAAgC,IAAA,uBAAA;AACpC,IAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,cAAA,EAAA;AAIA,IAAA,qBAAA,YAAA,SAAA,sFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,iBAAiB,OAAA,GAAA,GAAI,OAAA,OAAA,CAAiB;IAAA,CAAA;AACnD,IAAA,uBAAA,EAAa,EACX;AAEP,IAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,IAAA;AACE,IAAA,iBAAA,EAAA;;AAAgC,IAAA,uBAAA;AACpC,IAAA,yBAAA,IAAA,IAAA;AACE,IAAA,qBAAA,IAAA,sEAAA,GAAA,GAAA,KAAA,CAAA;AAeF,IAAA,uBAAA,EAAK;AAEP,IAAA,qBAAA,IAAA,sEAAA,GAAA,GAAA,IAAA,EAAsC,IAAA,sEAAA,GAAA,GAAA,IAAA,EA8BD,IAAA,sEAAA,GAAA,GAAA,IAAA;;;;;;AArE/B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,IAAA,eAAA,CAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,mBAAA,QAAA,EAAmC,UAAA,IAAA;AAOnC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,IAAA,cAAA,CAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,mBAAA,OAAA,EAAkC,UAAA,IAAA;AAOlC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,IAAA,IAAA,cAAA,CAAA;AAEF,IAAA,oBAAA,CAAA;AAAA,IAAA,yBAAA,WAAA,mBAAA,aAAA,KAAA,IAAA,QAAA;AAiBJ,IAAA,oBAAA;AAAA,IAAA,yBAAA,mBAAA,WAAA,OAAA,OAAA,mBAAA,QAAA,UAAA,KAAA,EAAA;AA8BA,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,KAAA,EAAA,SAAA,OAAA,KAAA,WAAA,KAAA,EAAA;AAkDA,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,KAAA,EAAA,SAAA,OAAA,KAAA,eAAA,KAAA,EAAA;;;;;;AASA,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACE,IAAA,iBAAA,CAAA;;AAA6B,IAAA,uBAAA;AACjC,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,oBAAA,EAAA;AAGA,IAAA,qBAAA,YAAA,SAAA,2FAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,cAAc,OAAA,GAAA,GAAI,MAAA,CAAS;IAAA,CAAA;AACxC,IAAA,uBAAA,EAAmB,EACjB;;;AAND,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,WAAA,CAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,GAAA;;;;;;AAvWV,IAAA,yBAAA,GAAA,SAAA,CAAA,EAA+B,GAAA,IAAA,EACzB,GAAA,MAAA,CAAA,EACkC,GAAA,IAAA;AAC9B,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA,EAAK,EACpB;AAEP,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,MAAA,CAAA;AAEA,IAAA,oBAAA,GAAA,KAAA,CAAA;;AACF,IAAA,uBAAA,EAAK;AAEP,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,IAAA;AAoBA,IAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,IAAA;AACE,IAAA,iBAAA,EAAA;;AAA6B,IAAA,uBAAA;AACjC,IAAA,yBAAA,IAAA,IAAA;AAAI,IAAA,iBAAA,EAAA;AAAc,IAAA,uBAAA,EAAK;AAEzB,IAAA,qBAAA,IAAA,uDAAA,GAAA,GAAA,IAAA,EAAmC,IAAA,uDAAA,GAAA,GAAA,IAAA,EAyBF,IAAA,uDAAA,GAAA,GAAA,IAAA;AAkDjC,IAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,IAAA;AACE,IAAA,iBAAA,EAAA;;AAAkC,IAAA,uBAAA;AACtC,IAAA,yBAAA,IAAA,IAAA;AACE,IAAA,2BAAA,IAAA,+CAAA,GAAA,GAAA,OAAA,MAAA,mCAAA;AAiBF,IAAA,uBAAA,EAAK;AAEP,IAAA,qBAAA,IAAA,uDAAA,GAAA,GAAA,IAAA,EAAsB,IAAA,uDAAA,GAAA,GAAA,IAAA,EAoBF,IAAA,uDAAA,GAAA,GAAA,IAAA,EAYI,IAAA,uDAAA,GAAA,GAAA,IAAA,EAYR,IAAA,uDAAA,GAAA,GAAA,IAAA;AA0BhB,IAAA,yBAAA,IAAA,IAAA,EAAI,IAAA,MAAA,CAAA,EACc,IAAA,OAAA,CAAA;AAEZ,IAAA,oBAAA,IAAA,UAAA,CAAA;AAOA,IAAA,yBAAA,IAAA,IAAA;AAAI,IAAA,iBAAA,EAAA;;AAAuC,IAAA,uBAAA;AAC3C,IAAA,yBAAA,IAAA,UAAA,CAAA;AAOE,IAAA,qBAAA,SAAA,SAAA,kEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAY,OAAA,GAAA,CAAI,CAAC;IAAA,CAAA;AAC3B,IAAA,uBAAA,EAAS,EACN,EACH;AAEP,IAAA,qBAAA,IAAA,uDAAA,IAAA,EAAA,EAA2C,IAAA,uDAAA,GAAA,GAAA,IAAA;AA4I7C,IAAA,uBAAA;;;;;;;;AA1WU,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,IAAA;AAKU,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,sBAAA,GAAA,IAAA,OAAA,GAAA,GAAA,QAAA,CAAA;AAGlB,IAAA,oBAAA,CAAA;AAAA,IAAA,yBAAA,UAAA,OAAA,KAAA,EAAA,YAAA,IAAA,IAAA,OAAA;AAqBM,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,IAAA,IAAA,WAAA,CAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,IAAA;AAEN,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,KAAA,EAAA,cAAA,SAAA,KAAA,EAAA;AAyBA,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,KAAA,EAAA,YAAA,SAAA,KAAA,EAAA;AAyBA,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,KAAA,EAAA,WAAA,SAAA,KAAA,EAAA;AA0BM,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,IAAA,IAAA,gBAAA,CAAA;AAEF,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,SAAA;AAmBJ,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,OAAA,aAAA,KAAA,EAAA;AAoBA,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,WAAA,KAAA,EAAA;AAYA,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,eAAA,KAAA,EAAA;AAYA,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,OAAA,KAAA,EAAA;AAoBA,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,QAAA,KAAA,EAAA;AAgBU,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,IAAA,IAAA,qBAAA,CAAA;AAEF,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,aAAA,CAAA,OAAA,gBAAA,EAAA,OAAA,GAAA,CAAA,CAAA;AAWR,IAAA,oBAAA;AAAA,IAAA,yBAAA,WAAA,OAAA,eAAA,KAAA,KAAA,IAAA,QAAA;AAiIA,IAAA,oBAAA;AAAA,IAAA,yBAAA,YAAA,WAAA,OAAA,QAAA,MAAA,OAAA,OAAA,SAAA,QAAA,KAAA,IAAA,QAAA;;;;;AAaF,IAAA,yBAAA,GAAA,OAAA,CAAA;AAA0B,IAAA,iBAAA,CAAA;;AAAiC,IAAA,uBAAA;;;AAAjC,IAAA,oBAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,eAAA,CAAA;;;ADjWtB,IAAO,mBAAP,MAAO,yBAAwB,gBAAe;EAPpD,cAAA;;AAQE,SAAA,kBAAkB,KAAK,MAAM,aAAa,gBAAQ,YAAY;AAC9D,SAAA,eAAe,KAAK,MAAM,aAAa,gBAAQ,eAAe;AAE9D,SAAA,MAAM,SACJ,MAAM,KAAK,KAAI,EAAG,eAAe,KAAK,GAAE,CAAE,CAAC;AAE7C,SAAA,aAAa,SAAqB,MAAM;MACtC,KAAK,OAAM;MACX,EAAE,OAAO,KAAK,IAAG,GAAI,KAAI;KAC1B;AACD,SAAA,OAAO,SAAS,MAAK;AACnB,YAAM,KAAK,KAAK,GAAE;AAClB,YAAM,OAAO,KAAK,KAAI;AACtB,YAAM,SAAS,KAAK,eAAe,EAAE;AACrC,aAAO;QACL,UAAU,KAAK,iBAAiB,SAAS,QAAQ,UAAU,EAAE,CAAC;QAC9D,eAAe,OAAO,KAAK,QAAQ,MAAM,CAAA,CAAE;QAC3C,aAAa,OAAO,KAAK,QAAQ,YAAY,CAAA,CAAE;QAC/C,YAAY,OAAO,KAAK,QAAQ,OAAO,CAAA,CAAE;;IAE7C,CAAC;AACD,SAAA,iBAAiB,SACf,MAAM,KAAK,aAAY,EAAG,KAAK,GAAE,CAAE,CAAC;AAEtC,SAAA,UAAU,SACR,MAAM,KAAK,KAAI,EAAG,eAAe,KAAK,GAAE,CAAE,CAAC;AAG7C,SAAA,OAAO;;EAEP,eAAY;AACV,UAAM,iBAAiB,KAAK,eAAc;AAC1C,QAAI,kBAAkB;AAAM;AAE5B,UAAM,KAAK,KAAK,GAAE;AAClB,UAAM,QAAQ,CAAC,eAAe;AAC9B,UAAM,MAAM,SAAS,KAAK,KAAI,EAAG,UAAU,mBAAmB,CAAA,CAAE,EAAE,KAChE,CAAC,MAAM,MAAM,EAAE;AAEjB,SAAK,kBAAkB,IAAI,OAAO,GAAG;EACvC;;EAGA,kBAAkB,IAAY,OAAgB,KAAY;AACxD,SAAK,MAAM,SAAS,IAAI,gBAAQ,kBAAkB,EAAE,IAAI,OAAO,IAAG,CAAE,CAAC;EACvE;EAEA,iBAAiB,IAAY,OAAc;AACzC,SAAK,MAAM,SAAS,IAAI,gBAAQ,iBAAiB,EAAE,IAAI,MAAK,CAAE,CAAC;EACjE;EAEA,cAAc,IAAY,OAAe;AACvC,SAAK,MAAM,SAAS,IAAI,gBAAQ,cAAc,EAAE,IAAI,MAAK,CAAE,CAAC;EAC9D;EAEA,YAAY,OAAa;AACvB,SAAK,MAAM,SAAS,IAAI,gBAAQ,kBAAkB,KAAK,CAAC;EAC1D;;;;;sHA1DW,gBAAe,IAAA,KAAf,gBAAe;EAAA;AAAA,GAAA;iFAAf,kBAAe,WAAA,CAAA,CAAA,cAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,sCAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,QAAA,OAAA,GAAA,CAAA,GAAA,cAAA,MAAA,GAAA,CAAA,GAAA,QAAA,SAAA,GAAA,CAAA,WAAA,KAAA,GAAA,aAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,WAAA,GAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,yBAAA,GAAA,CAAA,WAAA,IAAA,WAAA,IAAA,QAAA,UAAA,QAAA,4BAAA,GAAA,aAAA,kBAAA,GAAA,CAAA,WAAA,IAAA,WAAA,IAAA,QAAA,UAAA,QAAA,2BAAA,GAAA,oBAAA,GAAA,OAAA,GAAA,CAAA,uBAAA,YAAA,GAAA,YAAA,GAAA,CAAA,WAAA,IAAA,WAAA,IAAA,QAAA,UAAA,GAAA,iBAAA,GAAA,SAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,UAAA,UAAA,GAAA,CAAA,GAAA,YAAA,WAAA,QAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,YAAA,OAAA,CAAA,GAAA,UAAA,SAAA,yBAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;AChB5B,IAAA,oBAAA,GAAA,gBAAA,CAAA;AACA,IAAA,qBAAA,GAAA,wCAAA,IAAA,IAAA,SAAA,CAAA,EAAqB,GAAA,wCAAA,GAAA,GAAA,OAAA,CAAA;;;;AADP,IAAA,qBAAA,QAAA,IAAA,KAAA,CAAA,EAAe,SAAA,IAAA,WAAA,CAAA;AAC7B,IAAA,oBAAA;AAAA,IAAA,yBAAA,UAAA,IAAA,IAAA,KAAA,IAAA,GAAA,OAAA;;kBDUY,iBAAe,iBAAA,SAAA,YAAA,YAAA,iBAAA,UAAA,QAAA,sBAAA,eAAA,eAAA,iBAAA,WAAA,SAAA,GAAA,iBAAA,EAAA,CAAA;AAKrB,IAAO,kBAAP;;6EAAO,iBAAe,EAAA,WAAA,mBAAA,UAAA,qEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
