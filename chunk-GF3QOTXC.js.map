{
  "version": 3,
  "sources": ["src/app/routes/main/routes/data/directives/paged-table.directive.ts", "src/app/routes/main/routes/data/components/collection-table/collection-table.component.ts", "src/app/routes/main/routes/data/components/collection-table/collection-table.component.html", "src/app/routes/main/routes/data/data-shared.module.ts"],
  "sourcesContent": ["import { Directive, inject, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Table } from 'primeng/table';\n\n@Directive({\n  selector: '[labPagedTable]',\n})\nexport class PagedTableDirective implements OnInit {\n  translateSvc = inject(TranslateService);\n  pTable = inject(Table, { self: true });\n\n  ngOnInit(): void {\n    this.pTable.styleClass = 'p-datatable-sm';\n    this.pTable.rows = 10;\n    this.pTable.rowsPerPageOptions = [10, 25, 50, 100, 250];\n    this.pTable.showCurrentPageReport = true;\n    this.pTable.currentPageReportTemplate = this.translateSvc.instant(\n      'data.currentPageReportTemplate',\n    );\n  }\n}\n", "import {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  inject,\n  input,\n} from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { Category, Entities, IdType, Item, RecipeJson } from '~/models';\nimport { LabState, Settings } from '~/store';\nimport { CollectionItem } from '../../models';\n\ntype Entity = Category | Item | RecipeJson;\n\n@Component({\n  selector: 'lab-collection-table',\n  templateUrl: './collection-table.component.html',\n  styleUrls: ['./collection-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CollectionTableComponent {\n  store = inject(Store<LabState>);\n\n  ids = input.required<string[]>();\n  type = input.required<IdType>();\n  useRelativePath = input(false);\n\n  options = this.store.selectSignal(Settings.getOptions);\n  data = this.store.selectSignal(Settings.getDataset);\n\n  route = computed(() => {\n    const type = this.type();\n    const useRelativePath = this.useRelativePath();\n\n    if (useRelativePath) return '';\n\n    switch (type) {\n      case 'category':\n        return '/data/categories/';\n      case 'item':\n        return '/data/items/';\n      case 'recipe':\n        return '/data/recipes/';\n    }\n  });\n\n  value = computed((): CollectionItem[] => {\n    const ids = this.ids();\n    const type = this.type();\n    const data = this.data();\n\n    let entities: Entities<Entity>;\n    switch (type) {\n      case 'category':\n        entities = data.categoryEntities;\n        break;\n      case 'item':\n        entities = data.itemEntities;\n        break;\n      case 'recipe':\n        entities = data.recipeEntities;\n    }\n\n    return ids\n      .filter((i) => entities[i])\n      .map((i) => {\n        const entity = entities[i];\n        const obj: CollectionItem = {\n          id: entity.id,\n          name: entity.name,\n        };\n\n        if (type !== 'category') {\n          obj.category =\n            data.categoryEntities[(entity as Item | RecipeJson).category];\n        }\n\n        return obj;\n      });\n  });\n}\n", "<p-table\n  [value]=\"value()\"\n  labPagedTable\n  [paginator]=\"value().length > 10\"\n  [globalFilterFields]=\"['category.id']\"\n>\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th pSortableColumn=\"name\">\n        <span>{{ 'data.name' | translate }}</span>\n        <p-sortIcon field=\"name\"></p-sortIcon>\n      </th>\n      @if (type() !== 'category') {\n        <th pSortableColumn=\"category.name\">\n          <span>{{ 'data.category' | translate }}</span>\n          <p-sortIcon field=\"category.name\"></p-sortIcon>\n        </th>\n      }\n    </tr>\n    @if (value().length > 10) {\n      <tr>\n        <th>\n          <p-columnFilter\n            type=\"text\"\n            field=\"name\"\n            matchMode=\"contains\"\n          ></p-columnFilter>\n        </th>\n        @if (type() !== 'category') {\n          <th>\n            <p-columnFilter field=\"category.id\" matchMode=\"in\">\n              <ng-template\n                pTemplate=\"filter\"\n                let-value\n                let-filter=\"filterCallback\"\n              >\n                <p-multiSelect\n                  appendTo=\"body\"\n                  [ngModel]=\"value\"\n                  [options]=\"options().categories\"\n                  [maxSelectedLabels]=\"1\"\n                  [selectedItemsLabel]=\"'data.selectedLabel' | translate\"\n                  [placeholder]=\"'data.any' | translate\"\n                  (onChange)=\"filter($event.value)\"\n                ></p-multiSelect>\n              </ng-template>\n            </p-columnFilter>\n          </th>\n        }\n      </tr>\n    }\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-obj>\n    <tr>\n      <td>\n        <a [routerLink]=\"route() + obj.id\" queryParamsHandling=\"preserve\">\n          <button\n            pButton\n            pRipple\n            type=\"button\"\n            class=\"p-button-link\"\n            [label]=\"obj.name\"\n            [icon]=\"obj.id | iconSmClass: type()\"\n          ></button>\n        </a>\n      </td>\n      @if (type() !== 'category') {\n        <td>\n          @if (obj.category) {\n            <a\n              [routerLink]=\"'/data/categories/' + obj.category.id\"\n              queryParamsHandling=\"preserve\"\n            >\n              <button\n                pButton\n                pRipple\n                type=\"button\"\n                class=\"p-button-link\"\n                [label]=\"obj.category.name\"\n                [icon]=\"obj.category.id | iconSmClass: 'category'\"\n              ></button>\n            </a>\n          }\n        </td>\n      }\n    </tr>\n  </ng-template>\n</p-table>\n", "import { NgModule } from '@angular/core';\n\nimport { AppSharedModule } from '~/app-shared.module';\nimport { MainSharedModule } from '../../main-shared.module';\nimport { components } from './components';\nimport { directives } from './directives';\n\n@NgModule({\n  imports: [AppSharedModule, MainSharedModule],\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives],\n})\nexport class DataSharedModule {}\n"],
  "mappings": "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",
  "names": []
}
